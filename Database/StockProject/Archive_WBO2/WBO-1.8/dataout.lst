   1               		.file	"dataout.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
 117               		.data
 118               	.LC0:
 119 0000 00        		.string	""
 120 0001 00        		.string	""
 121 0002 00        		.string	""
 122 0003 00        		.string	""
 123 0004 00        		.string	""
 124 0005 00        		.string	""
 125               		.text
 130               	.global	put_in_string
 132               	put_in_string:
   1:dataout.c     **** 
   2:dataout.c     **** #include "dataout.h"
   3:dataout.c     **** 
   4:dataout.c     **** uint8_t put_in_string(int16_t number, char letter, uint8_t place)//place is 4 digit spotplus 2 for 
   5:dataout.c     **** {
 134               	.LM0:
 135               	.LFBB1:
 136 0000 EF92      		push r14
 137 0002 FF92      		push r15
 138 0004 0F93      		push r16
 139 0006 1F93      		push r17
 140 0008 CF93      		push r28
 141 000a DF93      		push r29
 142 000c 00D0      		rcall .
 143 000e 00D0      		rcall .
 144 0010 0F92      		push __tmp_reg__
 145 0012 CDB7      		in r28,__SP_L__
 146 0014 DEB7      		in r29,__SP_H__
 147               	/* prologue: function */
 148               	/* frame size = 5 */
 149               	/* stack size = 11 */
 150               	.L__stack_usage = 11
 151 0016 E62E      		mov r14,r22
 152 0018 F42E      		mov r15,r20
   6:dataout.c     **** 	//
   7:dataout.c     **** 	//'place' is the target place for the next character
   8:dataout.c     **** 	//
   9:dataout.c     **** 	//
  10:dataout.c     **** 	char temps[5] = "\0\0\0\0\0";//temporary spot for the number to add to the big string 
 154               	.LM1:
 155 001a DE01      		movw r26,r28
 156 001c 1196      		adiw r26,1
 157 001e E0E0      		ldi r30,lo8(.LC0)
 158 0020 F0E0      		ldi r31,hi8(.LC0)
 159 0022 25E0      		ldi r18,lo8(5)
 160               	.L2:
 161 0024 0190      		ld r0,Z+
 162 0026 0D92      		st X+,r0
 163 0028 2150      		subi r18,lo8(-(-1))
 164 002a 01F4      		brne .L2
  11:dataout.c     **** 
  12:dataout.c     **** 	if (number <= 32767 || number<= -32767)
  13:dataout.c     **** 	{
  14:dataout.c     **** 		//ultoa
  15:dataout.c     **** 		itoa(number, temps, 10); // integer number --> string temps base 10
 166               	.LM2:
 167 002c 8E01      		movw r16,r28
 168 002e 0F5F      		subi r16,lo8(-(1))
 169 0030 1F4F      		sbci r17,hi8(-(1))
 170 0032 B801      		movw r22,r16
 171 0034 4AE0      		ldi r20,lo8(10)
 172 0036 50E0      		ldi r21,hi8(10)
 173 0038 00D0      		rcall itoa
  16:dataout.c     **** 	}
  17:dataout.c     **** 	else
  18:dataout.c     **** 	{
  19:dataout.c     **** 		strcpy(temps,"over");// 
  20:dataout.c     **** 	}
  21:dataout.c     **** 	uint8_t datalen = strlen(temps);//actual legnth of ADC data
 175               	.LM3:
 176 003a F801      		movw r30,r16
 177 003c 0190      		ld __tmp_reg__,Z+
 178 003e 0020      		tst __tmp_reg__
 179 0040 01F4      		brne .-6
 180 0042 3197      		sbiw r30,1
 181 0044 8E2F      		mov r24,r30
 182 0046 801B      		sub r24,r16
  22:dataout.c     **** 	if (letter != '\0')//dont put in the letter and the colon if '\0'
 184               	.LM4:
 185 0048 EE20      		tst r14
 186 004a 01F0      		breq .L3
  23:dataout.c     **** 		{
  24:dataout.c     **** 		serialout[place] = letter;
 188               	.LM5:
 189 004c EF2D      		mov r30,r15
 190 004e F0E0      		ldi r31,lo8(0)
 191 0050 E050      		subi r30,lo8(-(serialout))
 192 0052 F040      		sbci r31,hi8(-(serialout))
 193 0054 E082      		st Z,r14
  25:dataout.c     **** 		place++;
 195               	.LM6:
 196 0056 F394      		inc r15
  26:dataout.c     **** 		serialout[place] = ':';
 198               	.LM7:
 199 0058 EF2D      		mov r30,r15
 200 005a F0E0      		ldi r31,lo8(0)
 201 005c E050      		subi r30,lo8(-(serialout))
 202 005e F040      		sbci r31,hi8(-(serialout))
 203 0060 9AE3      		ldi r25,lo8(58)
 204 0062 9083      		st Z,r25
 205 0064 00C0      		rjmp .L4
 206               	.L3:
  27:dataout.c     **** 		}
  28:dataout.c     **** 	else 
  29:dataout.c     **** 	{
  30:dataout.c     **** 	place--;
 208               	.LM8:
 209 0066 FA94      		dec r15
 210               	.L4:
 212               	.LM9:
 213 0068 9E01      		movw r18,r28
 214 006a 2F5F      		subi r18,lo8(-(1))
 215 006c 3F4F      		sbci r19,hi8(-(1))
   5:dataout.c     **** {
 217               	.LM10:
 218 006e F901      		movw r30,r18
 219 0070 9F2D      		mov r25,r15
 220 0072 00C0      		rjmp .L5
 221               	.L6:
 222               	.LBB2:
  31:dataout.c     **** 	}
  32:dataout.c     **** 	for (uint8_t i=0; i<datalen; i++) 
  33:dataout.c     **** 	{
  34:dataout.c     **** 		place++;
 224               	.LM11:
 225 0074 9F5F      		subi r25,lo8(-(1))
  35:dataout.c     **** 		serialout[place] = temps[i];
 227               	.LM12:
 228 0076 4191      		ld r20,Z+
 229 0078 A92F      		mov r26,r25
 230 007a B0E0      		ldi r27,lo8(0)
 231 007c A050      		subi r26,lo8(-(serialout))
 232 007e B040      		sbci r27,hi8(-(serialout))
 233 0080 4C93      		st X,r20
 234               	.L5:
  32:dataout.c     **** 	for (uint8_t i=0; i<datalen; i++) 
 236               	.LM13:
 237 0082 4E2F      		mov r20,r30
 238 0084 421B      		sub r20,r18
 239 0086 4817      		cp r20,r24
 240 0088 00F0      		brlo .L6
  32:dataout.c     **** 	for (uint8_t i=0; i<datalen; i++) 
 242               	.LM14:
 243 008a 8F0D      		add r24,r15
 244               	.LBE2:
  36:dataout.c     **** 		
  37:dataout.c     **** 	}
  38:dataout.c     **** 	place++;
 246               	.LM15:
 247 008c E82F      		mov r30,r24
 248 008e EF5F      		subi r30,lo8(-(1))
  39:dataout.c     **** 	serialout[place] = ','; 
 250               	.LM16:
 251 0090 F0E0      		ldi r31,lo8(0)
 252 0092 E050      		subi r30,lo8(-(serialout))
 253 0094 F040      		sbci r31,hi8(-(serialout))
 254 0096 9CE2      		ldi r25,lo8(44)
 255 0098 9083      		st Z,r25
  40:dataout.c     **** 	return  (place+1);
  41:dataout.c     **** 	
  42:dataout.c     **** }
 257               	.LM17:
 258 009a 8E5F      		subi r24,lo8(-(2))
 259               	/* epilogue start */
 260 009c 0F90      		pop __tmp_reg__
 261 009e 0F90      		pop __tmp_reg__
 262 00a0 0F90      		pop __tmp_reg__
 263 00a2 0F90      		pop __tmp_reg__
 264 00a4 0F90      		pop __tmp_reg__
 265 00a6 DF91      		pop r29
 266 00a8 CF91      		pop r28
 267 00aa 1F91      		pop r17
 268 00ac 0F91      		pop r16
 269 00ae FF90      		pop r15
 270 00b0 EF90      		pop r14
 271 00b2 0895      		ret
 277               	.Lscope1:
 280               	.global	uart_putch
 282               	uart_putch:
  43:dataout.c     **** 
  44:dataout.c     **** void uart_putch(uint8_t c)
  45:dataout.c     **** {
 284               	.LM18:
 285               	.LFBB2:
 286               	/* prologue: function */
 287               	/* frame size = 0 */
 288               	/* stack size = 0 */
 289               	.L__stack_usage = 0
 290               	.L9:
  46:dataout.c     ****     //if(c == '\n')
  47:dataout.c     ****      //   uart_putc('\r');
  48:dataout.c     **** 
  49:dataout.c     ****     /* wait until transmit buffer is empty */
  50:dataout.c     ****     while(!(UCSRA & (1 << UDRE)));
 292               	.LM19:
 293 00b4 5D9B      		sbis 43-32,5
 294 00b6 00C0      		rjmp .L9
  51:dataout.c     ****     /* send next byte */
  52:dataout.c     ****     UDR = c;
 296               	.LM20:
 297 00b8 8CB9      		out 44-32,r24
 298               	/* epilogue start */
  53:dataout.c     **** }
 300               	.LM21:
 301 00ba 0895      		ret
 303               	.Lscope2:
 305               	.global	uart_putst
 307               	uart_putst:
  54:dataout.c     **** 
  55:dataout.c     **** void uart_putst(const char* s)
  56:dataout.c     **** {
 309               	.LM22:
 310               	.LFBB3:
 311 00bc CF93      		push r28
 312 00be DF93      		push r29
 313               	/* prologue: function */
 314               	/* frame size = 0 */
 315               	/* stack size = 2 */
 316               	.L__stack_usage = 2
 318               	.LM23:
 319 00c0 EC01      		movw r28,r24
  57:dataout.c     ****     while(*s)
 321               	.LM24:
 322 00c2 00C0      		rjmp .L12
 323               	.L13:
  58:dataout.c     ****         uart_putch(*s++);
 325               	.LM25:
 326 00c4 00D0      		rcall uart_putch
 327               	.L12:
  57:dataout.c     ****     while(*s)
 329               	.LM26:
 330 00c6 8991      		ld r24,Y+
 331 00c8 8823      		tst r24
 332 00ca 01F4      		brne .L13
 333               	/* epilogue start */
  59:dataout.c     **** }
 335               	.LM27:
 336 00cc DF91      		pop r29
 337 00ce CF91      		pop r28
 338 00d0 0895      		ret
 340               	.Lscope3:
 343               	.global	uart_put16dec
 345               	uart_put16dec:
  60:dataout.c     **** 
  61:dataout.c     **** void uart_put16dec(uint16_t d)
  62:dataout.c     **** {
 347               	.LM28:
 348               	.LFBB4:
 349 00d2 BF92      		push r11
 350 00d4 CF92      		push r12
 351 00d6 DF92      		push r13
 352 00d8 EF92      		push r14
 353 00da FF92      		push r15
 354 00dc 0F93      		push r16
 355 00de 1F93      		push r17
 356 00e0 CF93      		push r28
 357 00e2 DF93      		push r29
 358               	/* prologue: function */
 359               	/* frame size = 0 */
 360               	/* stack size = 9 */
 361               	.L__stack_usage = 9
 362 00e4 8C01      		movw r16,r24
 364               	.LM29:
 365 00e6 25E0      		ldi r18,lo8(5)
 366 00e8 E22E      		mov r14,r18
 367 00ea F12C      		mov r15,__zero_reg__
  63:dataout.c     ****     uint16_t num = 10000;
  64:dataout.c     ****     uint8_t started = 0;
 369               	.LM30:
 370 00ec 20E0      		ldi r18,lo8(0)
  63:dataout.c     ****     uint16_t num = 10000;
 372               	.LM31:
 373 00ee C0E1      		ldi r28,lo8(10000)
 374 00f0 D7E2      		ldi r29,hi8(10000)
 375               	.LBB3:
  65:dataout.c     **** 
  66:dataout.c     ****     while(num > 0)
  67:dataout.c     ****     {
  68:dataout.c     ****         uint8_t b = d / num;
  69:dataout.c     ****         if(b > 0 || started || num == 1)
  70:dataout.c     ****         {
  71:dataout.c     ****             uart_putch('0' + b);
  72:dataout.c     ****             started = 1;
  73:dataout.c     ****         }
  74:dataout.c     ****         d -= b * num;
  75:dataout.c     **** 
  76:dataout.c     ****         num /= 10;
 377               	.LM32:
 378 00f2 3AE0      		ldi r19,lo8(10)
 379 00f4 C32E      		mov r12,r19
 380 00f6 D12C      		mov r13,__zero_reg__
 381               	.L17:
  68:dataout.c     ****         uint8_t b = d / num;
 383               	.LM33:
 384 00f8 C801      		movw r24,r16
 385 00fa BE01      		movw r22,r28
 386 00fc 00D0      		rcall __udivmodhi4
 387 00fe B62E      		mov r11,r22
  69:dataout.c     ****         if(b > 0 || started || num == 1)
 389               	.LM34:
 390 0100 6623      		tst r22
 391 0102 01F4      		brne .L15
  69:dataout.c     ****         if(b > 0 || started || num == 1)
 393               	.LM35:
 394 0104 2223      		tst r18
 395 0106 01F4      		brne .L15
 396 0108 C130      		cpi r28,1
 397 010a D105      		cpc r29,__zero_reg__
 398 010c 01F4      		brne .L16
 399               	.L15:
  71:dataout.c     ****             uart_putch('0' + b);
 401               	.LM36:
 402 010e 8B2D      		mov r24,r11
 403 0110 805D      		subi r24,lo8(-(48))
 404 0112 00D0      		rcall uart_putch
  72:dataout.c     ****             started = 1;
 406               	.LM37:
 407 0114 21E0      		ldi r18,lo8(1)
 408               	.L16:
  74:dataout.c     ****         d -= b * num;
 410               	.LM38:
 411 0116 6B2D      		mov r22,r11
 412 0118 70E0      		ldi r23,lo8(0)
 413 011a 6C9F      		mul r22,r28
 414 011c C001      		movw r24,r0
 415 011e 6D9F      		mul r22,r29
 416 0120 900D      		add r25,r0
 417 0122 7C9F      		mul r23,r28
 418 0124 900D      		add r25,r0
 419 0126 1124      		clr r1
 420 0128 081B      		sub r16,r24
 421 012a 190B      		sbc r17,r25
 423               	.LM39:
 424 012c CE01      		movw r24,r28
 425 012e B601      		movw r22,r12
 426 0130 00D0      		rcall __udivmodhi4
 427 0132 EB01      		movw r28,r22
 428 0134 0894      		sec
 429 0136 E108      		sbc r14,__zero_reg__
 430 0138 F108      		sbc r15,__zero_reg__
 431               	.LBE3:
  66:dataout.c     ****     while(num > 0)
 433               	.LM40:
 434 013a E114      		cp r14,__zero_reg__
 435 013c F104      		cpc r15,__zero_reg__
 436 013e 01F4      		brne .L17
 437               	/* epilogue start */
  77:dataout.c     ****     }
  78:dataout.c     **** }
 439               	.LM41:
 440 0140 DF91      		pop r29
 441 0142 CF91      		pop r28
 442 0144 1F91      		pop r17
 443 0146 0F91      		pop r16
 444 0148 FF90      		pop r15
 445 014a EF90      		pop r14
 446 014c DF90      		pop r13
 447 014e CF90      		pop r12
 448 0150 BF90      		pop r11
 449 0152 0895      		ret
 458               	.Lscope4:
 461               	.global	spitout
 463               	spitout:
  79:dataout.c     **** 
  80:dataout.c     **** uint8_t spitout(uint8_t place)
  81:dataout.c     **** {
 465               	.LM42:
 466               	.LFBB5:
 467               	/* prologue: function */
 468               	/* frame size = 0 */
 469               	/* stack size = 0 */
 470               	.L__stack_usage = 0
  82:dataout.c     **** 
  83:dataout.c     **** serialout[place-1] = '\n';
 472               	.LM43:
 473 0154 E82F      		mov r30,r24
 474 0156 F0E0      		ldi r31,lo8(0)
 475 0158 E050      		subi r30,lo8(-(serialout-1))
 476 015a F040      		sbci r31,hi8(-(serialout-1))
 477 015c 8AE0      		ldi r24,lo8(10)
 478 015e 8083      		st Z,r24
  84:dataout.c     **** //uint8_t datalen = strlen(serialout);
  85:dataout.c     **** //serialout[datalen] = '\n';//replace last char (,) with return
  86:dataout.c     **** uart_putst(serialout);
 480               	.LM44:
 481 0160 80E0      		ldi r24,lo8(serialout)
 482 0162 90E0      		ldi r25,hi8(serialout)
 483 0164 00D0      		rcall uart_putst
 484 0166 E0E0      		ldi r30,lo8(serialout)
 485 0168 F0E0      		ldi r31,hi8(serialout)
 486 016a 82E3      		ldi r24,lo8(50)
 487               	.L20:
 488               	.LBB4:
  87:dataout.c     **** for (uint8_t i= 0; i<LINESIZE ;i++)//blank serialout
  88:dataout.c     **** {
  89:dataout.c     **** 	serialout[i] = '\0';
 490               	.LM45:
 491 016c 1192      		st Z+,__zero_reg__
 492 016e 8150      		subi r24,lo8(-(-1))
  87:dataout.c     **** for (uint8_t i= 0; i<LINESIZE ;i++)//blank serialout
 494               	.LM46:
 495 0170 01F4      		brne .L20
 496               	/* epilogue start */
 497               	.LBE4:
  90:dataout.c     **** }
  91:dataout.c     **** return 0;//reset place
  92:dataout.c     **** }
 499               	.LM47:
 500 0172 0895      		ret
 502               	.Lscope5:
 503               		.comm serialout,50,1
 506               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 dataout.c
     /tmp/ccD83lyF.s:2      *ABS*:0000003f __SREG__
     /tmp/ccD83lyF.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccD83lyF.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccD83lyF.s:5      *ABS*:00000034 __CCP__
     /tmp/ccD83lyF.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccD83lyF.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccD83lyF.s:132    .text:00000000 put_in_string
                            *COM*:00000032 serialout
     /tmp/ccD83lyF.s:282    .text:000000b4 uart_putch
     /tmp/ccD83lyF.s:307    .text:000000bc uart_putst
     /tmp/ccD83lyF.s:345    .text:000000d2 uart_put16dec
     /tmp/ccD83lyF.s:463    .text:00000154 spitout

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
itoa
__udivmodhi4
