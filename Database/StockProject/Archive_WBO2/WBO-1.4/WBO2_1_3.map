Archive member included because of file (symbol)

/usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_mulsi3.o)
                              pid.o (__mulsi3)
/usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_udivmodhi4.o)
                              dataout.o (__udivmodhi4)
/usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_divmodhi4.o)
                              pid.o (__divmodhi4)
/usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_divmodsi4.o)
                              main.o (__divmodsi4)
/usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_exit.o)
                              /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o (exit)
/usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_copy_data.o)
                              dataout.o (__do_copy_data)
/usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_clear_bss.o)
                              dataout.o (__do_clear_bss)
/usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_udivmodsi4.o)
                              /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_divmodsi4.o) (__udivmodsi4)
/usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(strcpy.o)
                              dataout.o (strcpy)
/usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(itoa.o)
                              dataout.o (itoa)
/usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(strrev.o)
                              /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(itoa.o) (strrev)

Allocating common symbols
Common symbol       size              file

serialout           0x32              dataout.o
its_off             0x1               main.o
ADC_flag            0x1               main.o
pidData_pump        0x12              main.o
measured_temperature
                    0x2               main.o
pidCounter          0x1               main.o
heat_power          0x1               main.o
ADC_data            0x2               main.o
pidData_temp        0x12              main.o
zero_to_5_WB        0x4               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
LOAD dataout.o
LOAD initilize_hardware.o
LOAD main.o
LOAD pid.o
LOAD /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a
LOAD /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a
LOAD /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xb56
 *(.vectors)
 .vectors       0x00000000       0x26 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000026      0x118 main.o
                0x00000026                Narro_curve
                0x00000066                out_volts
                0x0000013e                . = ALIGN (0x2)
                0x0000013e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000013e        0x0 linker stubs
 *(.trampolines*)
                0x0000013e                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000013e                __ctors_start = .
 *(.ctors)
                0x0000013e                __ctors_end = .
                0x0000013e                __dtors_start = .
 *(.dtors)
                0x0000013e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000013e        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x0000013e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000013e        0xc /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000014a       0x16 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_copy_data.o)
                0x0000014a                __do_copy_data
 .init4         0x00000160       0x10 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_clear_bss.o)
                0x00000160                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000170        0x4 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x00000174        0x2 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x00000174                __vector_1
                0x00000174                __vector_12
                0x00000174                __bad_interrupt
                0x00000174                __vector_6
                0x00000174                __vector_3
                0x00000174                __vector_11
                0x00000174                __vector_13
                0x00000174                __vector_17
                0x00000174                __vector_7
                0x00000174                __vector_5
                0x00000174                __vector_4
                0x00000174                __vector_2
                0x00000174                __vector_15
                0x00000174                __vector_8
                0x00000174                __vector_10
                0x00000174                __vector_16
                0x00000174                __vector_18
 .text          0x00000176      0x18c dataout.o
                0x00000176                put_in_string
                0x00000238                uart_putch
                0x00000240                uart_putst
                0x00000258                uart_put16dec
                0x000002de                spitout
 .text          0x00000302       0x5e initilize_hardware.o
                0x00000302                timer0init
                0x00000310                adc_init
                0x00000322                setup_timer1
                0x00000348                setup_timer2
 .text          0x00000360      0x4c0 main.o
                0x00000360                main
                0x00000400                do_things
                0x0000041e                __vector_9
                0x0000048c                four
                0x000004ae                six_1
                0x000004c8                six_2
                0x000004ee                six_3
                0x0000052c                seven
                0x00000558                readadc
                0x0000056a                PID_heater
                0x000005a4                PID_pump
                0x0000060e                RtwoR_out
                0x000006ba                eight
                0x00000780                __vector_14
 .text          0x00000820      0x1c0 pid.o
                0x00000820                pid_Init
                0x00000874                pid_Controller
                0x000009d4                pid_Reset_Integrator
 .text          0x000009e0        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_mulsi3.o)
 .text          0x000009e0        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_udivmodhi4.o)
 .text          0x000009e0        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_divmodhi4.o)
 .text          0x000009e0        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_divmodsi4.o)
 .text          0x000009e0        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_exit.o)
 .text          0x000009e0        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_copy_data.o)
 .text          0x000009e0        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_clear_bss.o)
 .text          0x000009e0        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_udivmodsi4.o)
 .text          0x000009e0        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(strcpy.o)
 .text          0x000009e0        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(itoa.o)
 .text          0x000009e0        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(strrev.o)
                0x000009e0                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000009e0       0x3e /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_mulsi3.o)
                0x000009e0                __mulsi3
 .text.libgcc   0x00000a1e       0x28 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_udivmodhi4.o)
                0x00000a1e                __udivmodhi4
 .text.libgcc   0x00000a46       0x26 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_divmodhi4.o)
                0x00000a46                __divmodhi4
                0x00000a46                _div
 .text.libgcc   0x00000a6c       0x36 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_divmodsi4.o)
                0x00000a6c                __divmodsi4
 .text.libgcc   0x00000aa2        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000aa2        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000aa2        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000aa2       0x44 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_udivmodsi4.o)
                0x00000aa2                __udivmodsi4
 .text.avr-libc
                0x00000ae6        0xe /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(strcpy.o)
                0x00000ae6                strcpy
 .text.avr-libc
                0x00000af4       0x3e /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(itoa.o)
                0x00000af4                itoa
 .text.avr-libc
                0x00000b32       0x20 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(strrev.o)
                0x00000b32                strrev
                0x00000b52                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000b52        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_exit.o)
                0x00000b52                exit
                0x00000b52                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000b52        0x4 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000b56                _etext = .

.data           0x00800060       0x16 load address 0x00000b56
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0xb dataout.o
 .data          0x0080006b        0x0 initilize_hardware.o
 .data          0x0080006b        0xb main.o
 .data          0x00800076        0x0 pid.o
 .data          0x00800076        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_mulsi3.o)
 .data          0x00800076        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_udivmodhi4.o)
 .data          0x00800076        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_divmodhi4.o)
 .data          0x00800076        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_divmodsi4.o)
 .data          0x00800076        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_exit.o)
 .data          0x00800076        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_copy_data.o)
 .data          0x00800076        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_clear_bss.o)
 .data          0x00800076        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_udivmodsi4.o)
 .data          0x00800076        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(strcpy.o)
 .data          0x00800076        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(itoa.o)
 .data          0x00800076        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800076                . = ALIGN (0x2)
                0x00800076                _edata = .
                0x00800076                PROVIDE (__data_end, .)

.bss            0x00800076       0x6d
                0x00800076                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800076        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00800076        0x0 dataout.o
 .bss           0x00800076        0x0 initilize_hardware.o
 .bss           0x00800076        0xb main.o
                0x00800076                lambda
                0x00800078                pump
                0x0080007a                DC_val
                0x0080007c                IpumpVolts
                0x0080007e                ramp_flag
                0x0080007f                charspot
                0x00800080                rampcounter
 .bss           0x00800081        0x0 pid.o
 .bss           0x00800081        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_mulsi3.o)
 .bss           0x00800081        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_udivmodhi4.o)
 .bss           0x00800081        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_divmodhi4.o)
 .bss           0x00800081        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_divmodsi4.o)
 .bss           0x00800081        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_exit.o)
 .bss           0x00800081        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_copy_data.o)
 .bss           0x00800081        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_clear_bss.o)
 .bss           0x00800081        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/avr4/libgcc.a(_udivmodsi4.o)
 .bss           0x00800081        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(strcpy.o)
 .bss           0x00800081        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(itoa.o)
 .bss           0x00800081        0x0 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800081       0x32 dataout.o
                0x00800081                serialout
 COMMON         0x008000b3       0x30 main.o
                0x008000b3                its_off
                0x008000b4                ADC_flag
                0x008000b5                pidData_pump
                0x008000c7                measured_temperature
                0x008000c9                pidCounter
                0x008000ca                heat_power
                0x008000cb                ADC_data
                0x008000cd                pidData_temp
                0x008000df                zero_to_5_WB
                0x008000e3                PROVIDE (__bss_end, .)
                0x00000b56                __data_load_start = LOADADDR (.data)
                0x00000b6c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000e3        0x0
                0x008000e3                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000e3                PROVIDE (__noinit_end, .)
                0x008000e3                _end = .
                0x008000e3                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x2274
 *(.stab)
 .stab          0x00000000      0x6cc /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 .stab          0x000006cc      0x708 dataout.o
                                0x714 (size before relaxing)
 .stab          0x00000dd4      0x2ac initilize_hardware.o
                                0x4d4 (size before relaxing)
 .stab          0x00001080      0xba0 main.o
                                0xdc8 (size before relaxing)
 .stab          0x00001c20      0x360 pid.o
                                0x4f8 (size before relaxing)
 .stab          0x00001f80       0x6c /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(strcpy.o)
                                 0x78 (size before relaxing)
 .stab          0x00001fec      0x1b0 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(itoa.o)
                                0x1bc (size before relaxing)
 .stab          0x0000219c       0xd8 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/libc.a(strrev.o)
                                 0xe4 (size before relaxing)

.stabstr        0x00000000     0x1035
 *(.stabstr)
 .stabstr       0x00000000     0x1035 /usr/local/avr/lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(WBO2_1_3.out elf32-avr)
LOAD linker stubs
